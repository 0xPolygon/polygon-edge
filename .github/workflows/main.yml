on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.16.x

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args:
            --timeout=3m
            -E whitespace
            -E wsl
            -E wastedassign
            -E unconvert
            -E tparallel
            -E thelper
            -E stylecheck
            -E prealloc
            -E predeclared
            -E nolintlint
            -E nlreturn
            -E misspell
            -E makezero
            -E lll
            -E importas
            -E ifshort
            -E gosec
            -E gofmt
            -E goconst
            -E forcetypeassert
            -E dogsled
            -E dupl
            -E errname
            -E errorlint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.16.x

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Go build without race
        run: go build -a -o artifacts/polygon-edge .

      - name: Add race artifacts directory to the path
        run: echo "$(pwd)/artifacts" >> $GITHUB_PATH

      - name: Go test
        run: go test -timeout 28m ./...

      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Prepare artifact for Deployer
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v2
        with:
          name: polygon-edge_${{ github.sha }}_${{ steps.extract_branch.outputs.branch }}
          path: artifacts/
  notify-deployer:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Notify Deployer
        env:
          ARTIFACT_NAME: polygon-edge_${{ github.sha }}_${{ steps.extract_branch.outputs.branch }}
          COMMITER: ${{ github.actor }}
        run: |
          curl -X POST ${{ secrets.DEPLOYER_API }} -H 'Accept: application/vnd.github.everest-preview+json' -u ${{ secrets.DEPLOYER_ACCESS_TOKEN }} --data '{"event_type": "new_artefact", "client_payload": { "commiter":"'"$COMMITER"'","commit":"'"$GITHUB_SHA"'","branch":"'"$GITHUB_REF"'","repository": "'"$GITHUB_REPOSITORY"'","artefact_name":"'"$ARTIFACT_NAME"'" }}'
