---
name: Build Blade
on: # yamllint disable-line rule:truthy
  workflow_call:
    outputs:
      workflow_output:
        description: "Build Blade output"
        value: ${{ jobs.go_build.outputs.build_output_failure }}

jobs:
  go_build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      build_output_failure: ${{ steps.blade_build_failure.outputs.build_output }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
      - name: Setup Go environment
        uses: actions/setup-go@v5.0.0
        with:
          go-version: 1.20.x
      - name: Build Blade
        run: go build -o blade -tags netgo -ldflags="-s -w -X \"github.com/${GITHUB_REPOSITORY}/versioning.Version=${GITHUB_REF_NAME}\" -X \"github.com/${GITHUB_REPOSITORY}/versioning.Commit=${GITHUB_SHA}\"" && tar -czvf blade.tar.gz blade
        env:
          GOARC: amd64
          GOOS: linux
      - name: Build Blade Failed
        if: failure()
        id: blade_build_failure
        run: echo "build_output=false" >> $GITHUB_OUTPUT
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4.3.0
        with:
          name: blade
          path: blade.tar.gz
          retention-days: 3
  go_build_reproducibility:
    name: Verify Build Reproducibility
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
      - name: Setup Go environment
        uses: actions/setup-go@v5.0.0
        with:
          go-version: 1.20.x
      - name: Reproduce builds
        continue-on-error: true
        run: |
          go build -o ./blade-1 -trimpath -buildvcs=false
          go build -o ./blade-2 -trimpath -buildvcs=false

          buildsha1=$(shasum -a256 ./blade-1 | awk '{print $1}')
          buildsha2=$(shasum -a256 ./blade-2 | awk '{print $1}')

          echo "Build 1 SHA: $buildsha1"
          echo "Build 2 SHA: $buildsha2"

          if [ "$buildsha1" != "$buildsha2" ]; then
            echo "Build artifact does not match original"
            exit 1
          else
            echo "Build artifact matches original"
          fi
