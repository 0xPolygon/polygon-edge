---
name: Load Test
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      environment:
        default: devnet
        description: The environment to run against
        required: false
        type: environment
      scenario:
        default: 'simple'
        description: The scenario to run
        type: string
      duration:
        default: '5m'
        description: Duration of the test
        required: false
        type: string
  workflow_call:
    inputs:
      environment:
        default: devnet
        description: The environment to run against
        type: string
        required: true
      scenario:
        default: 'simple'
        required: true
        description: The mode for the stress test
        type: string
      duration:
        default: '5m'
        description: Duration of the test
        required: false
        type: string
    outputs:
      workflow_output:
        description: "Loadtest output"
        value: ${{ jobs.run_k6.outputs.loadtest_output_success }}
    secrets:
      AWS_REGION:
        required: true
      AWS_ROLE_ARN:
        required: true
      LOADTESTER_AWS_SUBNET_ID:
        required: true
      LOADTESTER_AWS_SG_ID:
        required: true
      LOADTESTER_INSTANCE_TYPE:
        required: true
      LOADTESTER_AMI:
        required: true
      LOADTEST_RPC_URL:
        required: true
      LOADTEST_MNEMONIC:
        required: true
      SLACK_PERFORMANCE_WEBHOOK_URL:
        required: true
      PTA:
        required: true

jobs:
  build:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-loadtester.outputs.label }}
      ec2-instance-id: ${{ steps.start-loadtester.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start loadtester
        id: start-loadtester
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.PTA }}
          ec2-image-id: ${{ secrets.LOADTESTER_AMI }}
          ec2-instance-type: ${{ secrets.LOADTESTER_INSTANCE_TYPE }}
          subnet-id: ${{ secrets.LOADTESTER_AWS_SUBNET_ID }}
          security-group-id: ${{ secrets.LOADTESTER_AWS_SG_ID }}
  run_k6:
    environment: ${{ inputs.environment }}
    needs: build
    runs-on: "${{ needs.build.outputs.label }}"
    outputs:
      loadtest_output_success: ${{ steps.run_k6_success.outputs.test_output }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - id: random-number-generator
        run: echo "random-number=$(echo $RANDOM)" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Install JQ
        run: |
          mkdir -p $HOME/.local/bin
          curl -sLo $HOME/.local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 && chmod +x $HOME/.local/bin/jq
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Download artifact to get rpc url
        env: 
          url: ${{ secrets.LOADTEST_RPC_URL }}
        if: ${{ env.url == '' }}
        uses: actions/download-artifact@v3
        with:
          name: rpc_url

      - name: Set rpc_url
        id: set_rpc_url
        run: |
          if [[ -z "${{ secrets.LOADTEST_RPC_URL }}" ]]; then
            echo "rpc_url=http://$(cat rpc_url.txt)" >> $GITHUB_OUTPUT
          else
            echo "rpc_url=${{ secrets.LOADTEST_RPC_URL }}" >> $GITHUB_OUTPUT
          fi

      - id: k6
        name: Run scenario
        run: |
          /home/ubuntu/k6 run --out statsd loadtest/scenarios/${{ inputs.scenario }}.js
          echo "tps_avg=$(cat summary.json | jq -r '.metrics.ethereum_tps.values.avg')" >> $GITHUB_OUTPUT
          echo "tps_max=$(cat summary.json | jq -r '.metrics.ethereum_tps.values.max')" >> $GITHUB_OUTPUT
          echo "iterations=$(cat summary.json | jq -r '.metrics.iterations.values.count')" >> $GITHUB_OUTPUT
          echo "block=$(cat summary.json | jq -r '.metrics.ethereum_block.values.count')" >> $GITHUB_OUTPUT
          echo "ttm=$(cat summary.json | jq -r '.metrics.ethereum_time_to_mine.values.avg')" >> $GITHUB_OUTPUT
          echo "gas_avg=$(cat summary.json | jq -r '.metrics.ethereum_gas_used.values.avg')" >> $GITHUB_OUTPUT
          echo "gas_max=$(cat summary.json | jq -r '.metrics.ethereum_gas_used.values.max')" >> $GITHUB_OUTPUT
        env:
          K6_STATSD_ENABLE_TAGS: true
          RPC_URL: ${{ steps.set_rpc_url.outputs.rpc_url }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_PERFORMANCE_WEBHOOK_URL }}
          LOADTEST_MNEMONIC: ${{ secrets.LOADTEST_MNEMONIC }}
          LOADTEST_DURATION: ${{ inputs.duration }}

      - name: Run tests success
        if: success()
        id: run_k6_success
        run: echo "test_output=true" >> $GITHUB_OUTPUT
      
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_PERFORMANCE_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "#03C03C",
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "K6 Loadtest ${{ inputs.scenario }} :zap:"
                      }
                    },
                    {
                      "type": "context",
                      "elements": [
                        {
                          "type": "mrkdwn",
                          "text": "Environment: *${{ inputs.environment }}*"
                        }
                      ]
                    },
                    {
                      "type": "context",
                      "elements": [
                        {
                          "type": "mrkdwn",
                          "text": "JSON-RPC: *<${{ steps.set_rpc_url.outputs.rpc_url }}|Open URL>*"
                        }
                      ]
                    },
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "View workflow run"
                          },
                          "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "Average TPS: *${{ steps.k6.outputs.tps_avg }}*\nMax TPS: *${{ steps.k6.outputs.tps_max }}*\nTransactions: *${{ steps.k6.outputs.iterations }}*\nBlock Number: *${{ steps.k6.outputs.block }}*\nTime to Mine: *${{ steps.k6.outputs.ttm }}*\nAverage Gas Used: *${{ steps.k6.outputs.gas_avg }}*\nMax Gas Used: *${{ steps.k6.outputs.gas_max }}*"
                      }
                    }
                  ]
                }
              ]
            }
  destroy:
    environment: ${{ inputs.environment }}
    needs: [build, run_k6]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop loadtester
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.PTA }}
          label: ${{ needs.build.outputs.label }}
          ec2-instance-id: ${{ needs.build.outputs.ec2-instance-id }}