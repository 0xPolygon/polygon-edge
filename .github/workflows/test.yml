---
name: Test
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  workflow_call:
    secrets:
      GH_TOKEN_CLONE_PRIVATE:
        required: true
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true
      DD_API_KEY:
        required: true
      SLACK_PERFORMANCE_WEBHOOK_URL:
        required: true
      PANDORAS_TARGET:
        required: true

jobs:
  go_test:
    name: Polygon Edge
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN_CLONE_PRIVATE }}

      - name: Install Dependencies
        run: ./setup-ci.sh

      - name: Run Go Test
        run: go test -coverprofile coverage.out -timeout 20m `go list ./... | grep -v e2e`

      - name: Upload coverage file to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.out
      
      # Triggering SonarQube analysis as results of it are required by Quality Gate check.
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  loadtest:
    uses: ./.github/workflows/loadtest.yml
    name: Load Test
    secrets:
      SLACK_PERFORMANCE_WEBHOOK_URL: ${{ secrets.SLACK_PERFORMANCE_WEBHOOK_URL }}
      PANDORAS_TARGET: ${{ secrets.PANDORAS_TARGET }}
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    with:
      runner: devnet
      environment: devnet
      scenario: simple
