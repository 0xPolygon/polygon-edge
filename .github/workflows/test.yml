---
name: Test
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: false
      SONAR_HOST_URL:
        required: false
    outputs:
      workflow_output:
        description: "Unit tests output"
        value: ${{ jobs.go_test.outputs.test_output_failure }}

jobs:
  go_test:
    name: Polygon Edge
    runs-on: ubuntu-latest
    outputs:
      test_output_failure: ${{ steps.run_tests_failure.outputs.test_output }}
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Dependencies
        run: ./setup-ci.sh

      - name: Run Go Test
        run: make test

      - name: Run Go Test Failed
        if: failure()
        id: run_tests_failure
        run: echo "test_output=false" >> $GITHUB_OUTPUT

      # Triggering SonarQube analysis as results of it are required by Quality Gate check.
      - name: SonarQube Scan
        if: ${{ env.HAVE_SONAR_TOKEN == 'true' }}
        uses: sonarsource/sonarqube-scan-action@master
        env:
          HAVE_SONAR_TOKEN: ${{ secrets.SONAR_TOKEN != '' }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        if: ${{ env.HAVE_SONAR_TOKEN == 'true' }}
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          HAVE_SONAR_TOKEN: ${{ secrets.SONAR_TOKEN != '' }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
