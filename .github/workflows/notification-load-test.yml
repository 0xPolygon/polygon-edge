---
name: Notification - Load Test
on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      environment:
        description: The environment to run against
        type: string
        required: true
      scenario:
        description: The scenario to run
        type: string
        required: true
      timeout:
        description: Time Out
        type: string
        required: true
      rate:
        description: Rate
        type: string
        required: true
      timeUnit:
        description: Time Unit
        type: string
        required: true
      duration:
        description: Duration
        type: string
        required: true
      preAllocatedVUs:
        description: Preallocated VUs
        type: string
        required: true
      maxVUs:
        description: Max VUs
        type: string
        required: true
      tps_avg:
        description: "Average Transactions Per Second"
        type: string
        required: true
      tps_max:
        description: "Maximum Transactions Per Second"
        type: string
        required: true
      iterations:
        description: "Number Of Transactions"
        type: string
        required: true
      block:
        description: "Block Number"
        type: string
        required: true
      ttm:
        description: "Time To Mine"
        type: string
        required: true
      gas_avg:
        description: "Average Gas Used"
        type: string
        required: true
      gas_max:
        description: "Maximum Gas Used"
        type: string
        required: true
    secrets:
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  notification:
    name: Notification
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Short SHA
        id: short_sha
        run: echo "value=`echo ${{ github.sha }} | cut -c1-7`" >> $GITHUB_OUTPUT
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.25.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          succeed_bnt: 'primary'
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Load Test: ${{ inputs.scenario }}"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Workflow Run"
                      },
                      "style": "${{ env.succeed_bnt }}",
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Triggered by: *${{ github.triggering_actor }}*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Commit: *<https://github.com/${{ github.repository }}/tree/${{ github.sha }}|${{ steps.short_sha.outputs.value }}>*"
                    }
                  ]
                },
                {
                  "type": "divider"
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Environment: *${{ inputs.environment }}*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Instance Type: *${{ vars.AWS_INSTANCE_TYPE }}*"
                    }
                  ]
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Time Out: *${{ inputs.timeout }}*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Rate: *${{ inputs.rate }}*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Time Unit: *${{ inputs.timeUnit }}*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Duration: *${{ inputs.duration }}*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Preallocated VUs: *${{ inputs.preAllocatedVUs }}*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Max VUs: *${{ inputs.maxVUs }}*"
                    }
                  ]
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Average TPS*\n${{ inputs.tps_avg }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Max TPS*\n${{ inputs.tps_max }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Average Gas Used*\n${{ inputs.gas_avg }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Max Gas Used*\n${{ inputs.gas_max }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Transactions*\n${{ inputs.iterations }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Block Number*\n${{ inputs.block }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Time to Mine (ms)*\n${{ inputs.ttm }}"
                    }
                  ]
                }
              ]
            }
