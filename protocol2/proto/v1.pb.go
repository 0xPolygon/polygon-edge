// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: protocol2/proto/v1.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol2_proto_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_protocol2_proto_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_protocol2_proto_v1_proto_rawDescGZIP(), []int{0}
}

type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Component) Reset() {
	*x = Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol2_proto_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_protocol2_proto_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_protocol2_proto_v1_proto_rawDescGZIP(), []int{1}
}

var File_protocol2_proto_v1_proto protoreflect.FileDescriptor

var file_protocol2_proto_v1_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x0b, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x32, 0x2f, 0x0a, 0x02, 0x56, 0x31, 0x12, 0x29, 0x0a, 0x0b, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x30, 0x01, 0x42, 0x12, 0x5a, 0x10, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protocol2_proto_v1_proto_rawDescOnce sync.Once
	file_protocol2_proto_v1_proto_rawDescData = file_protocol2_proto_v1_proto_rawDesc
)

func file_protocol2_proto_v1_proto_rawDescGZIP() []byte {
	file_protocol2_proto_v1_proto_rawDescOnce.Do(func() {
		file_protocol2_proto_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol2_proto_v1_proto_rawDescData)
	})
	return file_protocol2_proto_v1_proto_rawDescData
}

var file_protocol2_proto_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_protocol2_proto_v1_proto_goTypes = []interface{}{
	(*Empty)(nil),     // 0: v1.Empty
	(*Component)(nil), // 1: v1.Component
}
var file_protocol2_proto_v1_proto_depIdxs = []int32{
	0, // 0: v1.V1.WatchBlocks:input_type -> v1.Empty
	1, // 1: v1.V1.WatchBlocks:output_type -> v1.Component
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protocol2_proto_v1_proto_init() }
func file_protocol2_proto_v1_proto_init() {
	if File_protocol2_proto_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol2_proto_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol2_proto_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol2_proto_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocol2_proto_v1_proto_goTypes,
		DependencyIndexes: file_protocol2_proto_v1_proto_depIdxs,
		MessageInfos:      file_protocol2_proto_v1_proto_msgTypes,
	}.Build()
	File_protocol2_proto_v1_proto = out.File
	file_protocol2_proto_v1_proto_rawDesc = nil
	file_protocol2_proto_v1_proto_goTypes = nil
	file_protocol2_proto_v1_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// V1Client is the client API for V1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type V1Client interface {
	WatchBlocks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (V1_WatchBlocksClient, error)
}

type v1Client struct {
	cc grpc.ClientConnInterface
}

func NewV1Client(cc grpc.ClientConnInterface) V1Client {
	return &v1Client{cc}
}

func (c *v1Client) WatchBlocks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (V1_WatchBlocksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_V1_serviceDesc.Streams[0], "/v1.V1/WatchBlocks", opts...)
	if err != nil {
		return nil, err
	}
	x := &v1WatchBlocksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type V1_WatchBlocksClient interface {
	Recv() (*Component, error)
	grpc.ClientStream
}

type v1WatchBlocksClient struct {
	grpc.ClientStream
}

func (x *v1WatchBlocksClient) Recv() (*Component, error) {
	m := new(Component)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// V1Server is the server API for V1 service.
type V1Server interface {
	WatchBlocks(*Empty, V1_WatchBlocksServer) error
}

// UnimplementedV1Server can be embedded to have forward compatible implementations.
type UnimplementedV1Server struct {
}

func (*UnimplementedV1Server) WatchBlocks(*Empty, V1_WatchBlocksServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchBlocks not implemented")
}

func RegisterV1Server(s *grpc.Server, srv V1Server) {
	s.RegisterService(&_V1_serviceDesc, srv)
}

func _V1_WatchBlocks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(V1Server).WatchBlocks(m, &v1WatchBlocksServer{stream})
}

type V1_WatchBlocksServer interface {
	Send(*Component) error
	grpc.ServerStream
}

type v1WatchBlocksServer struct {
	grpc.ServerStream
}

func (x *v1WatchBlocksServer) Send(m *Component) error {
	return x.ServerStream.SendMsg(m)
}

var _V1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.V1",
	HandlerType: (*V1Server)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchBlocks",
			Handler:       _V1_WatchBlocks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protocol2/proto/v1.proto",
}
