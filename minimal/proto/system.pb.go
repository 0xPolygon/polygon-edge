// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: minimal/proto/system.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BlockchainEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Added   []*BlockchainEvent_Header `protobuf:"bytes,1,rep,name=added,proto3" json:"added,omitempty"`
	Removed []*BlockchainEvent_Header `protobuf:"bytes,2,rep,name=removed,proto3" json:"removed,omitempty"`
}

func (x *BlockchainEvent) Reset() {
	*x = BlockchainEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minimal_proto_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainEvent) ProtoMessage() {}

func (x *BlockchainEvent) ProtoReflect() protoreflect.Message {
	mi := &file_minimal_proto_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainEvent.ProtoReflect.Descriptor instead.
func (*BlockchainEvent) Descriptor() ([]byte, []int) {
	return file_minimal_proto_system_proto_rawDescGZIP(), []int{0}
}

func (x *BlockchainEvent) GetAdded() []*BlockchainEvent_Header {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *BlockchainEvent) GetRemoved() []*BlockchainEvent_Header {
	if x != nil {
		return x.Removed
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network int64         `protobuf:"varint,1,opt,name=network,proto3" json:"network,omitempty"`
	Genesis string        `protobuf:"bytes,2,opt,name=genesis,proto3" json:"genesis,omitempty"`
	Current *Status_Block `protobuf:"bytes,3,opt,name=current,proto3" json:"current,omitempty"`
	P2PAddr string        `protobuf:"bytes,4,opt,name=p2pAddr,proto3" json:"p2pAddr,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minimal_proto_system_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_minimal_proto_system_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_minimal_proto_system_proto_rawDescGZIP(), []int{1}
}

func (x *Status) GetNetwork() int64 {
	if x != nil {
		return x.Network
	}
	return 0
}

func (x *Status) GetGenesis() string {
	if x != nil {
		return x.Genesis
	}
	return ""
}

func (x *Status) GetCurrent() *Status_Block {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *Status) GetP2PAddr() string {
	if x != nil {
		return x.P2PAddr
	}
	return ""
}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minimal_proto_system_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_minimal_proto_system_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_minimal_proto_system_proto_rawDescGZIP(), []int{2}
}

type PeersAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PeersAddRequest) Reset() {
	*x = PeersAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minimal_proto_system_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeersAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeersAddRequest) ProtoMessage() {}

func (x *PeersAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minimal_proto_system_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeersAddRequest.ProtoReflect.Descriptor instead.
func (*PeersAddRequest) Descriptor() ([]byte, []int) {
	return file_minimal_proto_system_proto_rawDescGZIP(), []int{3}
}

func (x *PeersAddRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PeersInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PeersInfoRequest) Reset() {
	*x = PeersInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minimal_proto_system_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeersInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeersInfoRequest) ProtoMessage() {}

func (x *PeersInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minimal_proto_system_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeersInfoRequest.ProtoReflect.Descriptor instead.
func (*PeersInfoRequest) Descriptor() ([]byte, []int) {
	return file_minimal_proto_system_proto_rawDescGZIP(), []int{4}
}

func (x *PeersInfoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PeersInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *PeersInfoResponse) Reset() {
	*x = PeersInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minimal_proto_system_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeersInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeersInfoResponse) ProtoMessage() {}

func (x *PeersInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minimal_proto_system_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeersInfoResponse.ProtoReflect.Descriptor instead.
func (*PeersInfoResponse) Descriptor() ([]byte, []int) {
	return file_minimal_proto_system_proto_rawDescGZIP(), []int{5}
}

func (x *PeersInfoResponse) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type PeersListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []*Peer `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *PeersListResponse) Reset() {
	*x = PeersListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minimal_proto_system_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeersListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeersListResponse) ProtoMessage() {}

func (x *PeersListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minimal_proto_system_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeersListResponse.ProtoReflect.Descriptor instead.
func (*PeersListResponse) Descriptor() ([]byte, []int) {
	return file_minimal_proto_system_proto_rawDescGZIP(), []int{6}
}

func (x *PeersListResponse) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type BlockchainEvent_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int64  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Hash   string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *BlockchainEvent_Header) Reset() {
	*x = BlockchainEvent_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minimal_proto_system_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainEvent_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainEvent_Header) ProtoMessage() {}

func (x *BlockchainEvent_Header) ProtoReflect() protoreflect.Message {
	mi := &file_minimal_proto_system_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainEvent_Header.ProtoReflect.Descriptor instead.
func (*BlockchainEvent_Header) Descriptor() ([]byte, []int) {
	return file_minimal_proto_system_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BlockchainEvent_Header) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *BlockchainEvent_Header) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type Status_Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int64  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Hash   string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Status_Block) Reset() {
	*x = Status_Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minimal_proto_system_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status_Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status_Block) ProtoMessage() {}

func (x *Status_Block) ProtoReflect() protoreflect.Message {
	mi := &file_minimal_proto_system_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status_Block.ProtoReflect.Descriptor instead.
func (*Status_Block) Descriptor() ([]byte, []int) {
	return file_minimal_proto_system_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Status_Block) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Status_Block) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

var File_minimal_proto_system_proto protoreflect.FileDescriptor

var file_minimal_proto_system_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x01,
	0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x05, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x1a, 0x34, 0x0a, 0x06, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22,
	0xb7, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x2a,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x32,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x32, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x1a, 0x33, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x06, 0x0a, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x22, 0x21, 0x0a, 0x0f, 0x50, 0x65, 0x65, 0x72, 0x73, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x50, 0x65, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x11, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x11, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73,
	0x32, 0x75, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x42, 0x10, 0x5a, 0x0e, 0x2f, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_minimal_proto_system_proto_rawDescOnce sync.Once
	file_minimal_proto_system_proto_rawDescData = file_minimal_proto_system_proto_rawDesc
)

func file_minimal_proto_system_proto_rawDescGZIP() []byte {
	file_minimal_proto_system_proto_rawDescOnce.Do(func() {
		file_minimal_proto_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_minimal_proto_system_proto_rawDescData)
	})
	return file_minimal_proto_system_proto_rawDescData
}

var file_minimal_proto_system_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_minimal_proto_system_proto_goTypes = []interface{}{
	(*BlockchainEvent)(nil),        // 0: v1.BlockchainEvent
	(*Status)(nil),                 // 1: v1.Status
	(*Peer)(nil),                   // 2: v1.Peer
	(*PeersAddRequest)(nil),        // 3: v1.PeersAddRequest
	(*PeersInfoRequest)(nil),       // 4: v1.PeersInfoRequest
	(*PeersInfoResponse)(nil),      // 5: v1.PeersInfoResponse
	(*PeersListResponse)(nil),      // 6: v1.PeersListResponse
	(*BlockchainEvent_Header)(nil), // 7: v1.BlockchainEvent.Header
	(*Status_Block)(nil),           // 8: v1.Status.Block
	(*empty.Empty)(nil),            // 9: google.protobuf.Empty
}
var file_minimal_proto_system_proto_depIdxs = []int32{
	7, // 0: v1.BlockchainEvent.added:type_name -> v1.BlockchainEvent.Header
	7, // 1: v1.BlockchainEvent.removed:type_name -> v1.BlockchainEvent.Header
	8, // 2: v1.Status.current:type_name -> v1.Status.Block
	2, // 3: v1.PeersInfoResponse.peer:type_name -> v1.Peer
	2, // 4: v1.PeersListResponse.peers:type_name -> v1.Peer
	9, // 5: v1.System.GetStatus:input_type -> google.protobuf.Empty
	9, // 6: v1.System.Subscribe:input_type -> google.protobuf.Empty
	1, // 7: v1.System.GetStatus:output_type -> v1.Status
	0, // 8: v1.System.Subscribe:output_type -> v1.BlockchainEvent
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_minimal_proto_system_proto_init() }
func file_minimal_proto_system_proto_init() {
	if File_minimal_proto_system_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_minimal_proto_system_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minimal_proto_system_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minimal_proto_system_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minimal_proto_system_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeersAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minimal_proto_system_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeersInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minimal_proto_system_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeersInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minimal_proto_system_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeersListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minimal_proto_system_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainEvent_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minimal_proto_system_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status_Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_minimal_proto_system_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_minimal_proto_system_proto_goTypes,
		DependencyIndexes: file_minimal_proto_system_proto_depIdxs,
		MessageInfos:      file_minimal_proto_system_proto_msgTypes,
	}.Build()
	File_minimal_proto_system_proto = out.File
	file_minimal_proto_system_proto_rawDesc = nil
	file_minimal_proto_system_proto_goTypes = nil
	file_minimal_proto_system_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SystemClient is the client API for System service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SystemClient interface {
	// GetInfo returns info about the client
	GetStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Status, error)
	// Subscribe subscribes to blockchain events
	Subscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (System_SubscribeClient, error)
}

type systemClient struct {
	cc grpc.ClientConnInterface
}

func NewSystemClient(cc grpc.ClientConnInterface) SystemClient {
	return &systemClient{cc}
}

func (c *systemClient) GetStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/v1.System/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemClient) Subscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (System_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_System_serviceDesc.Streams[0], "/v1.System/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &systemSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type System_SubscribeClient interface {
	Recv() (*BlockchainEvent, error)
	grpc.ClientStream
}

type systemSubscribeClient struct {
	grpc.ClientStream
}

func (x *systemSubscribeClient) Recv() (*BlockchainEvent, error) {
	m := new(BlockchainEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SystemServer is the server API for System service.
type SystemServer interface {
	// GetInfo returns info about the client
	GetStatus(context.Context, *empty.Empty) (*Status, error)
	// Subscribe subscribes to blockchain events
	Subscribe(*empty.Empty, System_SubscribeServer) error
}

// UnimplementedSystemServer can be embedded to have forward compatible implementations.
type UnimplementedSystemServer struct {
}

func (*UnimplementedSystemServer) GetStatus(context.Context, *empty.Empty) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}
func (*UnimplementedSystemServer) Subscribe(*empty.Empty, System_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterSystemServer(s *grpc.Server, srv SystemServer) {
	s.RegisterService(&_System_serviceDesc, srv)
}

func _System_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.System/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServer).GetStatus(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _System_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SystemServer).Subscribe(m, &systemSubscribeServer{stream})
}

type System_SubscribeServer interface {
	Send(*BlockchainEvent) error
	grpc.ServerStream
}

type systemSubscribeServer struct {
	grpc.ServerStream
}

func (x *systemSubscribeServer) Send(m *BlockchainEvent) error {
	return x.ServerStream.SendMsg(m)
}

var _System_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.System",
	HandlerType: (*SystemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _System_GetStatus_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _System_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "minimal/proto/system.proto",
}
