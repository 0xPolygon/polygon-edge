syntax = "proto3";

package v1;

option go_package = "/minimal/proto";

import "google/protobuf/empty.proto";

service System {
    // GetInfo returns info about the client
    rpc GetStatus(google.protobuf.Empty) returns (Status);

    /*
    // PeersAdd adds a new peer
    rpc PeersAdd(PeersAddRequest) returns (google.protobuf.Empty);

    // PeersList returns the list of peers
    rpc PeersList(google.protobuf.Empty) returns (PeersListResponse);

    // PeersInfo returns the info of a peer
    rpc PeersInfo(PeersInfoRequest) returns (PeersInfoResponse);
    */
    
    // Subscribe subscribes to blockchain events
    rpc Subscribe(google.protobuf.Empty) returns (stream BlockchainEvent);
}

message BlockchainEvent {
    repeated Header added = 1;
    repeated Header removed = 2;
    
    message Header {
        int64 number = 1;
        string hash = 2;
    }
}

message Status {
    int64 network = 1;
    
    string genesis = 2;

    Block current = 3;

    string p2pAddr = 4;
    
    message Block {
        int64 number = 1;
        string hash = 2;
    }
}

message Peer {

}

message PeersAddRequest {
    string id = 1;
}

message PeersInfoRequest {
    string id = 1;
}

message PeersInfoResponse {
    Peer peer = 1;
}

message PeersListResponse {
    repeated Peer peers = 1;
}
